omi-factory(1) -- build TurnKey Linux appliances
================================================

## SYNOPSIS

`omi-factory` [<common-options>] <command> [<command-options>]

## DESCRIPTION

**omi-factory** provides a set of commands to create OMIs for TurnKey Linux
appliances.

It should be run as root, from a TurnKey Linux development environment such as
`tkldev`.

The following commands are provided:

  * `create-volume`:
    Create and attach a new volume
  * `destroy-volume`:
    Destroy an existing volume
  * `tkl-build`:
    Build a TKL appliance
  * `tkl-install-iso`:
    Install a system from an ISO file to a device
  * `tkl-install-rootfs`:
    Install a system from a rootfs to a device
  * `tkl-clean`:
    Clean TKL build dirs
  * `create-image`:
    Create an AMI from an existing volume

## COMMON OPTIONS

  * `-v`, `--verbose`:
    Be more verbose: print debug output.

  * `-h`, `--help`:
    Show the help message and exit.

## CREATE-VOLUME COMMAND

`omi-factory create-volume` [<options>] <volume_size>

Creates a new volume and attaches it to the instance. On success it will print
the `DEVICE` and `VOLUME_ID` shell variables to `stdout`.

  * <volume_size>:
    Size of the volume in GiBs.

Options:

  * `--instance-id` <instance_id>:
    The id of the instance the volume should be attached to. Defaults to the
    local instance.

  * `--volume-location` <location>:
    Which location to use for the volume. Defaults to _eu-west-1a_.

  * `--region` <region>:
    The EC2 region to use. Defaults to _eu-west-1_.

  * `--tags` <json>:
    Tags to assign to the volume. The value of this option must be a dictionary
    represented as a JSON string, for example: `--tags "{ 'user': 'me' }"`.

## DESTROY-VOLUME COMMAND

`omi-factory destroy-volume [<options>] <volume-id>

Destroys a volume.

  * <volume-id>:
    Which volume to destroy.

Options:

  * `--region` <region>:
    The EC2 region to use. Defaults to _eu-west-1_.

## TKL-BUILD COMMAND

`omi-factory tkl-build` [<options>] <app>

Builds a Turn Key Linux appliance and installs it on a device.

  * <app>:
    The name of the TurnKey Linux appliance to build.

Mandatory option:

  * `-d` <device>, `--device` <device>:
    The block device onto which the appliance will be copied.

Directory options:

  * `-p` <directory>, `--patch-dir` <directory>:
    The directory holding the patches used by tklpatch(1) to modify the
    appliance root filesystem. The default is _/usr/local/share/tklpatch_.

  * `-f` <directory>, `--fab-dir` <directory>:
    The TurnKey factory directory. The default is _/turnkey/fab_.

  * `-m` <directory>, `--mount-point` <directory>:
    The temporary mount point used to mount the block device.
    The default is _/mnt_.

  * `-w` <directory>, `--work-dir` <directory>:
    The directory used to extract the root filesystem and apply patches with
    tklpatch(1). The default is _/tmp_.

Miscellaneous options:

  * `-g` <url>, `--turnkey-apps-git` <url>:
    The URL of the github account hosting each TurnKey Linux appliance. The
    default is _https://github.com/turnkeylinux-apps_.

  * `-t` <patch>, `--turnkey-apps-git` <patch>:
    Add a patch to the list of patches applied by tklpatch(1). The patch must
    be copied to the patch directory beforehand, see the `--patch-dir` option.
    The default patch list is: _headless_, _outscale_.

## INSTALL-ISO COMMAND

`omi-factory tkl-install-iso` [<options>] <appliance-or-iso>

Installs a system from an ISO file to a device.

  * <appliance-or-iso>:
    Either the full path of an ISO file to install, or the name of a TKL
    appliance for which an ISO file has been built in the standard TKL build
    directory.

Mandatory Option:

  * `-d` <device>, `--device` <device>:
    The block device where the system is going to be installed.

Options:

  * `-f` <directory>, `--fab-dir` <directory>:
    The TurnKey factory directory. The default is _/turnkey/fab_.

  * `-p` <directory>, `--patch-dir` <directory>:
    The directory holding the patches used by tklpatch(1) to modify the
    appliance root filesystem. The default is _/usr/local/share/tklpatch_.

  * `-t` <patch>, `--turnkey-apps-git` <patch>:
    Add a patch to the list of patches applied by tklpatch(1). The patch must
    be copied to the patch directory beforehand, see the `--patch-dir` option.
    The default patch list is: _headless_, _outscale_.

## INSTALL-ROOTFS COMMAND

`omi-factory install-rootfs` [<options>] <rootfs>

Installs the content of a directory (the rootfs) on a device and makes it
bootable.

Unless you are doing things manually, you do not need this command: it is
called by `tkl-install-iso`.

  * <rootfs>:
    Directory containing the system to install.

Mandatory option:

  * `-d` <device>, `--device` <device>:
    The block device onto which the ISO will be copied.

## TKL-CLEAN COMMAND

`omi-factory tkl-clean` [<options>] <app>

Cleans Turn Key Linux build dirs.

  * <app>:
    The name of the TurnKey Linux appliance to build.

Options:

  * `-f` <directory>, `--fab-dir` <directory>:
    The TurnKey factory directory. The default is _/turnkey/fab_.

## CREATE-IMAGE COMMAND

`omi-factory create-image` [<options>] <image-name>

Creates an OMI from an existing volume.

  * <image-name>:
    The name of the image to create. This will be set as the `name` tag of the
    image.

Mandatory option:

  * `--volume-id` <volume>:
    The id of the volume to create the image from.

Other options:

  * `--image-description` <description>:
    Some text describing the image. Defaults to _None_.

  * `--image-arch` <arch>:
    The machine architecture of the image. Defaults to _x86_64_.

  * `--region` <region>:
    The EC2 region to use. Defaults to _eu-west-1_.

  * `--tags` <json>:
    Tags to assign to the volume. The value of this option must be a dictionary
    represented as a JSON string, for example: `--tags "{ 'user': 'me' }"`.

## SEE ALSO

tklpatch(1)
